{"version":3,"sources":["webpack:///path---docs-events-56ac8644b9a91a7f6503.js","webpack:///./.cache/json/docs-events.json"],"names":["webpackJsonp","397","module","exports","data","allPostTitles","edges","node","frontmatter","title","lesson","category","chapter","type","fields","slug","postBySlug","html","timeToRead","excerpt","cover","date","tags","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,QAAUC,MAAQC,aAAeC,MAAA,aAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAAmFC,QAAWC,KAAA,kBAAyBR,MAAQC,aAAeC,MAAA,OAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAA6EC,QAAWC,KAAA,YAAmBR,MAAQC,aAAeC,MAAA,WAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAAiFC,QAAWC,KAAA,gBAAuBR,MAAQC,aAAeC,MAAA,SAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAA+EC,QAAWC,KAAA,cAAqBR,MAAQC,aAAeC,MAAA,cAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAAoFC,QAAWC,KAAA,mBAA0BR,MAAQC,aAAeC,MAAA,gBAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAAsFC,QAAWC,KAAA,qBAA4BR,MAAQC,aAAeC,MAAA,aAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAAmFC,QAAWC,KAAA,kBAAyBR,MAAQC,aAAeC,MAAA,eAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAAqFC,QAAWC,KAAA,oBAA2BR,MAAQC,aAAeC,MAAA,aAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAAmFC,QAAWC,KAAA,kBAAyBR,MAAQC,aAAeC,MAAA,QAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAA8EC,QAAWC,KAAA,aAAoBR,MAAQC,aAAeC,MAAA,uBAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAA6FC,QAAWC,KAAA,4BAAmCR,MAAQC,aAAeC,MAAA,kBAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAAwFC,QAAWC,KAAA,uBAA8BR,MAAQC,aAAeC,MAAA,uBAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAA6FC,QAAWC,KAAA,4BAAmCR,MAAQC,aAAeC,MAAA,4BAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAAkGC,QAAWC,KAAA,iCAAwCR,MAAQC,aAAeC,MAAA,wBAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAA8FC,QAAWC,KAAA,6BAAoCR,MAAQC,aAAeC,MAAA,wBAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAA8FC,QAAWC,KAAA,6BAAoCR,MAAQC,aAAeC,MAAA,SAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAA+EC,QAAWC,KAAA,cAAqBR,MAAQC,aAAeC,MAAA,WAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAAiFC,QAAWC,KAAA,gBAAuBR,MAAQC,aAAeC,MAAA,kBAAAC,OAAA,EAAAC,SAAA,cAAAC,QAAA,EAAAC,KAAA,QAAwFC,QAAWC,KAAA,wBAA8BC,YAAeC,KAAA,+hRAA8/PC,WAAA,EAAAC,QAAA,6IAAAX,aAAsiCC,MAAA,SAAAW,MAAA,+CAAAC,KAAA,aAAAV,SAAA,cAAAW,MAAA,mDAA+KR,QAAWC,KAAA,aAAmBQ,aAAgBR,KAAA,UAAAJ,SAAA","file":"path---docs-events-56ac8644b9a91a7f6503.js","sourcesContent":["webpackJsonp([135770652933338],{\n\n/***/ 397:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allPostTitles\":{\"edges\":[{\"node\":{\"frontmatter\":{\"title\":\"Aggregates\",\"lesson\":2,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/aggregates\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Akka\",\"lesson\":5,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/akka\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Commands\",\"lesson\":4,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/commands\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Events\",\"lesson\":3,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/events\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Subscribers\",\"lesson\":6,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/subscribers\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Configuration\",\"lesson\":7,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/configuration\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Primitives\",\"lesson\":1,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/primitives\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Snapshotting\",\"lesson\":2,\"category\":\"akkatecture\",\"chapter\":4,\"type\":\"docs\"},\"fields\":{\"slug\":\"/snapshotting\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Clustering\",\"lesson\":2,\"category\":\"akkatecture\",\"chapter\":4,\"type\":\"docs\"},\"fields\":{\"slug\":\"/clustering\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Sagas\",\"lesson\":1,\"category\":\"akkatecture\",\"chapter\":4,\"type\":\"docs\"},\"fields\":{\"slug\":\"/sagas\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Production Readiness\",\"lesson\":4,\"category\":\"akkatecture\",\"chapter\":4,\"type\":\"docs\"},\"fields\":{\"slug\":\"/production-readiness\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Tips and Tricks\",\"lesson\":1,\"category\":\"akkatecture\",\"chapter\":5,\"type\":\"docs\"},\"fields\":{\"slug\":\"/tips-and-tricks\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Your First Aggregate\",\"lesson\":1,\"category\":\"akkatecture\",\"chapter\":3,\"type\":\"docs\"},\"fields\":{\"slug\":\"/your-first-aggregate\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Your First Aggregate Saga\",\"lesson\":4,\"category\":\"akkatecture\",\"chapter\":3,\"type\":\"docs\"},\"fields\":{\"slug\":\"/your-first-aggregate-saga\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Your First Read Model\",\"lesson\":3,\"category\":\"akkatecture\",\"chapter\":3,\"type\":\"docs\"},\"fields\":{\"slug\":\"/your-first-read-model\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Your First Subscriber\",\"lesson\":2,\"category\":\"akkatecture\",\"chapter\":3,\"type\":\"docs\"},\"fields\":{\"slug\":\"/your-first-subscriber\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Videos\",\"lesson\":3,\"category\":\"akkatecture\",\"chapter\":5,\"type\":\"docs\"},\"fields\":{\"slug\":\"/videos\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Articles\",\"lesson\":2,\"category\":\"akkatecture\",\"chapter\":5,\"type\":\"docs\"},\"fields\":{\"slug\":\"/articles\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Getting Started\",\"lesson\":1,\"category\":\"akkatecture\",\"chapter\":1,\"type\":\"docs\"},\"fields\":{\"slug\":\"/getting-started\"}}}]},\"postBySlug\":{\"html\":\"<p>In an event source system like Akkatecture, aggregate root data is stored stored in events.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-csharp\\\"><code class=\\\"language-csharp\\\">    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">PingEvent</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token class-name\\\">AggregateEvent</span><span class=\\\"token operator\\\">&lt;</span>TestAggregate<span class=\\\"token punctuation\\\">,</span> TestAggregateId<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">string</span> Data <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span>\\n\\n      <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">PingEvent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">string</span> data<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n          Data <span class=\\\"token operator\\\">=</span> data<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<blockquote>\\n<p>Please make sure to read the section on <code class=\\\"language-text\\\">value objects and events &lt;value-objects&gt;</code> for some important notes on creating events.</p>\\n</blockquote>\\n<h2 id=\\\"emitting-events\\\"><a href=\\\"#emitting-events\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Emitting Events</h2>\\n<p>In order to emit an event from an aggregate, call the <code class=\\\"language-text\\\">protected</code> <code class=\\\"language-text\\\">Emit(...)</code> method which applies the event to the aggregate state and commits the event to its event source.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-csharp\\\"><code class=\\\"language-csharp\\\">    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">Ping</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">string</span> data<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// Fancy domain logic here that validates against aggregate state...</span>\\n\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">string</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">IsNullOrEmpty</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">Throw</span><span class=\\\"token punctuation\\\">(</span>DomainError<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">With</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Ping data empty\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n\\n      <span class=\\\"token function\\\">Emit</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">PingEvent</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"applying-events\\\"><a href=\\\"#applying-events\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Applying Events</h2>\\n<p>Akkatecture has a rather opinionated way of approaching the application of events. Events that are emitting should only be applied to its own aggregate state. that makes it rather convienient to isolate the place where aggregate events get applied within the aggregate's boundaries. To register an aggregate event applyer method on the aggregate state, all you have to do is implement the <code class=\\\"language-text\\\">IApply&lt;&gt;</code> interface on your aggregate state.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-csharp\\\"><code class=\\\"language-csharp\\\">    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">TestAggregate</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token class-name\\\">AggregateRoot</span><span class=\\\"token operator\\\">&lt;</span>TestAggregate<span class=\\\"token punctuation\\\">,</span> TestAggregateId<span class=\\\"token punctuation\\\">,</span> TestState<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        IApply<span class=\\\"token operator\\\">&lt;</span>PingEvent<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">private</span> List<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">string</span><span class=\\\"token operator\\\">></span> Pings <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token generic-method\\\"><span class=\\\"token function\\\">List</span><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token keyword\\\">string</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">TestAggregate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">TestAggregateId</span> aggregateId<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">base</span><span class=\\\"token punctuation\\\">(</span>aggregateId<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">Apply</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">PingEvent</span> aggregateEvent<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n            Pings<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Add</span><span class=\\\"token punctuation\\\">(</span>aggregateEvent<span class=\\\"token punctuation\\\">.</span>Data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<blockquote>\\n<p>Note the above example of aggregate event application could be improved because it is not idempotent. Desgining your apply methods with idempotency in mind, will make for a resilient aggregate state. </p>\\n</blockquote>\\n<h2 id=\\\"published-events\\\"><a href=\\\"#published-events\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Published Events</h2>\\n<p>TBD</p>\",\"timeToRead\":1,\"excerpt\":\"In an event source system like Akkatecture, aggregate root data is stored stored in events. Please make sure to read the section on   for…\",\"frontmatter\":{\"title\":\"Events\",\"cover\":\"https://unsplash.it/400/300/?random?BoldMage\",\"date\":\"01/07/2018\",\"category\":\"akkatecture\",\"tags\":[\"basic-concepts\",\"akkatecture\",\"csharp\",\"dotnet\"]},\"fields\":{\"slug\":\"/events\"}}},\"pathContext\":{\"slug\":\"/events\",\"category\":\"akkatecture\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-events-56ac8644b9a91a7f6503.js","module.exports = {\"data\":{\"allPostTitles\":{\"edges\":[{\"node\":{\"frontmatter\":{\"title\":\"Aggregates\",\"lesson\":2,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/aggregates\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Akka\",\"lesson\":5,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/akka\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Commands\",\"lesson\":4,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/commands\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Events\",\"lesson\":3,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/events\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Subscribers\",\"lesson\":6,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/subscribers\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Configuration\",\"lesson\":7,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/configuration\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Primitives\",\"lesson\":1,\"category\":\"akkatecture\",\"chapter\":2,\"type\":\"docs\"},\"fields\":{\"slug\":\"/primitives\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Snapshotting\",\"lesson\":2,\"category\":\"akkatecture\",\"chapter\":4,\"type\":\"docs\"},\"fields\":{\"slug\":\"/snapshotting\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Clustering\",\"lesson\":2,\"category\":\"akkatecture\",\"chapter\":4,\"type\":\"docs\"},\"fields\":{\"slug\":\"/clustering\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Sagas\",\"lesson\":1,\"category\":\"akkatecture\",\"chapter\":4,\"type\":\"docs\"},\"fields\":{\"slug\":\"/sagas\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Production Readiness\",\"lesson\":4,\"category\":\"akkatecture\",\"chapter\":4,\"type\":\"docs\"},\"fields\":{\"slug\":\"/production-readiness\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Tips and Tricks\",\"lesson\":1,\"category\":\"akkatecture\",\"chapter\":5,\"type\":\"docs\"},\"fields\":{\"slug\":\"/tips-and-tricks\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Your First Aggregate\",\"lesson\":1,\"category\":\"akkatecture\",\"chapter\":3,\"type\":\"docs\"},\"fields\":{\"slug\":\"/your-first-aggregate\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Your First Aggregate Saga\",\"lesson\":4,\"category\":\"akkatecture\",\"chapter\":3,\"type\":\"docs\"},\"fields\":{\"slug\":\"/your-first-aggregate-saga\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Your First Read Model\",\"lesson\":3,\"category\":\"akkatecture\",\"chapter\":3,\"type\":\"docs\"},\"fields\":{\"slug\":\"/your-first-read-model\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Your First Subscriber\",\"lesson\":2,\"category\":\"akkatecture\",\"chapter\":3,\"type\":\"docs\"},\"fields\":{\"slug\":\"/your-first-subscriber\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Videos\",\"lesson\":3,\"category\":\"akkatecture\",\"chapter\":5,\"type\":\"docs\"},\"fields\":{\"slug\":\"/videos\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Articles\",\"lesson\":2,\"category\":\"akkatecture\",\"chapter\":5,\"type\":\"docs\"},\"fields\":{\"slug\":\"/articles\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Getting Started\",\"lesson\":1,\"category\":\"akkatecture\",\"chapter\":1,\"type\":\"docs\"},\"fields\":{\"slug\":\"/getting-started\"}}}]},\"postBySlug\":{\"html\":\"<p>In an event source system like Akkatecture, aggregate root data is stored stored in events.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-csharp\\\"><code class=\\\"language-csharp\\\">    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">PingEvent</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token class-name\\\">AggregateEvent</span><span class=\\\"token operator\\\">&lt;</span>TestAggregate<span class=\\\"token punctuation\\\">,</span> TestAggregateId<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">string</span> Data <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token punctuation\\\">}</span>\\n\\n      <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">PingEvent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">string</span> data<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n          Data <span class=\\\"token operator\\\">=</span> data<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<blockquote>\\n<p>Please make sure to read the section on <code class=\\\"language-text\\\">value objects and events &lt;value-objects&gt;</code> for some important notes on creating events.</p>\\n</blockquote>\\n<h2 id=\\\"emitting-events\\\"><a href=\\\"#emitting-events\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Emitting Events</h2>\\n<p>In order to emit an event from an aggregate, call the <code class=\\\"language-text\\\">protected</code> <code class=\\\"language-text\\\">Emit(...)</code> method which applies the event to the aggregate state and commits the event to its event source.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-csharp\\\"><code class=\\\"language-csharp\\\">    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">Ping</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">string</span> data<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// Fancy domain logic here that validates against aggregate state...</span>\\n\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">string</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">IsNullOrEmpty</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">Throw</span><span class=\\\"token punctuation\\\">(</span>DomainError<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">With</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Ping data empty\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n\\n      <span class=\\\"token function\\\">Emit</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">PingEvent</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"applying-events\\\"><a href=\\\"#applying-events\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Applying Events</h2>\\n<p>Akkatecture has a rather opinionated way of approaching the application of events. Events that are emitting should only be applied to its own aggregate state. that makes it rather convienient to isolate the place where aggregate events get applied within the aggregate's boundaries. To register an aggregate event applyer method on the aggregate state, all you have to do is implement the <code class=\\\"language-text\\\">IApply&lt;&gt;</code> interface on your aggregate state.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-csharp\\\"><code class=\\\"language-csharp\\\">    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">TestAggregate</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token class-name\\\">AggregateRoot</span><span class=\\\"token operator\\\">&lt;</span>TestAggregate<span class=\\\"token punctuation\\\">,</span> TestAggregateId<span class=\\\"token punctuation\\\">,</span> TestState<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        IApply<span class=\\\"token operator\\\">&lt;</span>PingEvent<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">private</span> List<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">string</span><span class=\\\"token operator\\\">></span> Pings <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token generic-method\\\"><span class=\\\"token function\\\">List</span><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token keyword\\\">string</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">TestAggregate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">TestAggregateId</span> aggregateId<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">base</span><span class=\\\"token punctuation\\\">(</span>aggregateId<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">Apply</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">PingEvent</span> aggregateEvent<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n            Pings<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Add</span><span class=\\\"token punctuation\\\">(</span>aggregateEvent<span class=\\\"token punctuation\\\">.</span>Data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<blockquote>\\n<p>Note the above example of aggregate event application could be improved because it is not idempotent. Desgining your apply methods with idempotency in mind, will make for a resilient aggregate state. </p>\\n</blockquote>\\n<h2 id=\\\"published-events\\\"><a href=\\\"#published-events\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Published Events</h2>\\n<p>TBD</p>\",\"timeToRead\":1,\"excerpt\":\"In an event source system like Akkatecture, aggregate root data is stored stored in events. Please make sure to read the section on   for…\",\"frontmatter\":{\"title\":\"Events\",\"cover\":\"https://unsplash.it/400/300/?random?BoldMage\",\"date\":\"01/07/2018\",\"category\":\"akkatecture\",\"tags\":[\"basic-concepts\",\"akkatecture\",\"csharp\",\"dotnet\"]},\"fields\":{\"slug\":\"/events\"}}},\"pathContext\":{\"slug\":\"/events\",\"category\":\"akkatecture\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-events.json\n// module id = 397\n// module chunks = 135770652933338"],"sourceRoot":""}